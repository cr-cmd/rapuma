Installation instructions for Rapuma
	By Dennis Drescher (dennis_drescher@sil.org)
	Last edited: 28 September 2013

RAPUMA (RApid PUblication MAnager) is intended to be a system for managing publication data that could be used for output in a variety of media. Rapuma takes data from the editing environment and allows the user to create, manage and apply repeatable processes to the publication data for output. An example would be a USFM manuscript created and edited in ParaTExt being output to a print-ready PDF document. This would be for printing a book which contains all its components such as front and back matter, contents, maps and cover. Rapuma should be able to manage all the various processes that go into a publication such as this and when it is complete, all the data components ready for archiving.

STATUS: Currently Rapuma is under heavy development (by a single, part-time, amateur Python programmer) and only has a command line API. There are hopes to develop a GUI once a useful number of features have been implemented. Deployment of Rapuma in a limited scope, primarily text processing, began in October 2012. It was "feature-adequate" by early 2013, in time to do a Bible publication.

These instructions are for manually installing the Rapuma publishing system package on a typical Ubuntu operating system (currently Precise, 12.04). Ultimately we want Rapuma to completely install from the package but at this point, given the state of flux it is in, it is best to get the latest code from the repository and manually install it. The installation commands listed here will be done in the terminal. If you have not opened a terminal yet, do it now.


REQUIRED PACKAGES
-----------------------------------------
Go to the SIL Linux packages site and hook your system up with that if it isn't already. Follow the instructions on this page:

    http://packages.sil.org

Now run the following commands in your terminal:

    sudo apt-get update
    sudo apt-get upgrade

Note the upgrade could take some time. Also, if it asks, answer yes to the "install without verification" question.

Next, in the terminal, you need to install all the necessary packages to run the Rapuma publishing system. There are two categories, required and suggested. When you use this command, be sure to review the list of programs that it is proposing to install. Look for any that it might want to remove. Be sure no critical programs are being removed. If you are not sure, do not go any further. Here are packages to install:

Required:

    sudo apt-get install python-configobj evince python-argparse pdftk mercurial meld librsvg2-bin

Another required package is the Palaso Python library. Rapuma depends on a couple parts of that.
At this time, that package needs to be added to your system by cloning the project, then
following the install proceedure. It can be cloned from here:

    hg clone http://hg.palaso.org/palaso-python ~/Projects/palaso-python

This needs to be installed before you can use it. To install run:

    cd ~/Projects/palaso-python
    ./setup.py --nokmn build
    sudo ./setup.py --nokmn install

(Note: need to add simple test for install of palaso-python)

Some suggested additional package(s) to make your Linux DTP system complete:

    sudo apt-get install tortoisehg libteckit-perl teckit libfont-ttf-scripts-perl

Finally, log out and log back in again so the system will properly recognize the newly installed packages and the TortoiseHg package should work correctly.

With all the above packages installed, we are ready to move on to installing Rapuma publishing package.

GETTING Rapuma
-----------------------------------------
To obtain Rapuma, you need to check it out from the Mercurial repository it resides in. To simplify these instructions we will assume that the Rapuma package will go in a folder called "~/Projects" but you are welcomed to put it wherever you want.

Create the above path if it does not exist with this command in your terminal:

    mkdir ~/Projects

Now you can to go to the Palaso website and clone the project code with:

    hg clone http://hg.palaso.org/pub-rpm ~/Projects/rapuma

That should put Rapuma where you need it. From time to time you may want to update it. To do that, from inside the Rapuma project folder (~/Projects/rapuma), this is the command you need:

    hg pull --update


PACKAGE INSTALLATION AND SETUP
-----------------------------------------
Like the palaso.python setup you will use the setup.py script. With a terminal in the root of the rapuma repository on your local machine, run:

    cd ~/Projects/rapuma
    ./setup.py build
    sudo ./setup.py install

To test the instalation, type:

    rapuma -h

What you should get is a Rapuma help screen. To get started using it, read the quickstart file that is in the rapuma repo directory.


